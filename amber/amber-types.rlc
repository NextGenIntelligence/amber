;
; rowl - 1st generation
; Copyright (C) 2010 nineties
;
; $Id: amber-types.rlc 2014-04-09 03:11:05 nineties $
;

(import "config")

; == node types ==
(var ExprE               0) ; ExprE <head:symbol> <args:list>
(var ListE               1) ; NULL or cons object
(var TupleE              2)
(var ArrayE              3)
(var TableE              4)
(var NilE                5)
(var UndefE              6)
(var BoolE               7)
(var SymbolE             8) ; SymbolE <name:string> <index:int>
(var AssemblerE          9)
(var BytecodeE           10)
(var FunctionE           11)
(var BuiltinFunctionE    12)
(var BoundFunctionE      13)
(var ContinuationE       14)
(var AliasE              15)
(var InputFileStreamE    16) ; InputFileStreamE path chan
(var OutputFileStreamE   17) ; OutputFileStreamE path chan
(var InputStringStreamE  18)
(var OutputStringStreamE 19)
(var ParserE             20)
(var BigIntE             21)

(var ATOM_TYPE_OFFSET NilE)

; plain nodes
(var PLAIN_TYPE_OFFSET 22)
(var IntE     (+ PLAIN_TYPE_OFFSET PLAIN_INT))
(var StringE  (+ PLAIN_TYPE_OFFSET PLAIN_STRING))
(var FloatE   (+ PLAIN_TYPE_OFFSET PLAIN_FLOAT))
(var BuiltinTypeE (+ PLAIN_TYPE_OFFSET PLAIN_OTHER))

(var NUM_NODE_TYPE (+ BuiltinTypeE 1))

; fields
(var SymbolName  1)
(var SymbolIndex 2)

; TRUE when n is a fixed-length integer
(define FIX (n) `(& @n 1))
; TRUE when n is a non-negative fixed-length integer
(define UFIX (n) `(&& (& @n 1) (> @n 0)))
