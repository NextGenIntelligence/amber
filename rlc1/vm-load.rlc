;
; rowl - generation 1
; Copyright (C) 2010 nineties
;
; $Id: vm-load.rlc 2010-06-22 15:31:13 nineties $
;

(import "stdlib")
(import "vm-compile")

; load rowl executable program from file

; layout of executable program
; 4bytes        : size of the file (=N)
; 4bytes        : # of global reference objects
; 4bytes        : total size of global value objects (=M)
; Mbytes        : global value objects
; (N-M-12)bytes : byte code

; system calls
(var SYS_READ    3)
(var SYS_OPEN    5)
(var SYS_CLOSE   6)

; IO flags
(var O_RDONLY   0x0)
(var O_WRONLY   0x1)
(var O_RDWR     0x2)
(var O_CREAT    0x40)
(var O_TRUNC    0x100)
(var O_APPEND   0x200)

(var vm-load-code `(

(fun get_code (prog) (
    (int n ([] prog 0)) ; N1
    (+= prog (* 4 (+ n 1)))
    (= n ([] prog 0)) ; N2
    (+= prog (+ n 4))
    (+= prog 4) ; skip N3
    (return prog)
    ))

(export read_program)
(fun read_program (path nrefp) (
    (int fd (open path))
    (int size)
    (int nref)
    (int szval)
    (syscall @SYS_READ fd (address size) 12)
    ([]= nrefp 0 nref)
    (void* mem (alloc_block @BLOCK_SIZE)) ; XXX: temporal implementation
    (syscall @SYS_READ fd mem (- size 12))
    (close fd)
    (return (+ mem szval))
    ))

(fun open (path) (
    (int fd (syscall @SYS_OPEN path @O_RDONLY))
    (if (< fd 0) ((error "open failed")))
    (return fd)
    ))

(fun close (fd) (
    (syscall @SYS_CLOSE fd)
    ))

    ))

(vtable_push)
(compile vm-load-code)
(vtable_pop)
