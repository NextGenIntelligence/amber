;
; rowl - generation 1
; Copyright (C) 2010 nineties
;
; $Id: vm-prim.rlc 2010-07-08 16:33:24 nineties $
;

; primitive functions

(var SYS_READ 3)
(var SYS_WRITE 4)
(var STDIN_FD 0)
(var STDOUT_FD 1)
(var RDBUFSZ 512) ; read buffer size
(var WRBUFSZ 512) ; write buffer size
(var EOF -1)

(define assign_indices (table) (do
    (var idx 0)
    (map (lambda (ent) (do
        (incl idx)
        `(@(car ent) @(- idx 1) @(cdr ent))
        )) table)
    ))

(var prim_table (assign_indices `(
    (flush  .   prim_flush)
    (getc   .   prim_getc)
    (nextc  .   prim_nextc)
    (putc   .   prim_putc)
    (puti   .   prim_puti)
    (memset .   primt_memset)
    )))

(var vm-prim-code `(

(fun strlen (str) (
    (int len 0)
    (while (!= (*8 str) '\0') (
        (incl str)
        (incl len)
        ))
    (return len)
    ))

(char[] @RDBUFSZ stdin_buf)
(int stdin_beg 0)
(int stdin_end 0)

(char[] @WRBUFSZ stdout_buf)
(int stdout_pos 0)

(export prim_flush)
; flush stdout
(fun prim_flush () (
    (if (> stdout_pos 0) (
        (syscall @SYS_WRITE @STDOUT_FD stdout_buf stdout_pos)
        (= stdout_pos 0)
        ))
    ))

(fun fill_stdin_buf () (
    (if (== stdin_beg stdin_end) (
        ; input buffer is empty
        (int sz (syscall @SYS_READ @STDIN_FD stdin_buf @RDBUFSZ))
        (= stdin_end sz)
        (= stdin_beg 0)
        ))
    ))

(fun prim_getc () (
    (fill_stdin_buf)
    (if (== stdin_beg stdin_end) ((return @EOF)))
    (int c (*8 (+ stdin_buf stdin_beg)))
    (incl stdin_beg)
    (return c)
    ))

(fun prim_nextc () (
    (fill_stdin_buf)
    (fill_stdin_buf)
    (if (== stdin_beg stdin_end) ((return @EOF)))
    (return (*8 (+ stdin_buf stdin_beg)))
    ))

(fun prim_putc (c) (
    ([]=8 stdout_buf stdout_pos c)
    (incl stdout_pos)
    (if (== stdout_pos @WRBUFSZ) (
        (prim_flush)
        (return)
        ))
    (if (== '\n' c) (
        (prim_flush)
        ))
    ))

(char[] 10 puti_digits)
(fun prim_puti (n) (
    (if (< n 0) (
        (prim_putc '-')
        (= n (neg n))
        ))
    ([]=8 puti_digits 0 (+ (% n 10) '0'))
    (= n (/ n 10))
    (int i 0)
    (while (!= n 0) (
        (incl i)
        ([]=8 puti_digits i (+ (% n 10) '0'))
        (= n (/ n 10))
        ))
    (while (>= i 0) (
        (prim_putc (*8 (+ puti_digits i)))
        (decl i)
        ))
    ))

(fun primt_memset (ptr val bytes) (
    (for i 0 bytes (
        ([]=8 ptr i val)
        ))
    ))

))

