;
; rowl - generation 1
; Copyright (C) 2010 nineties
;
; $Id: vm.rlc 2010-05-29 13:54:11 nineties $
;

; generate assembly code of virtual machine

(import "stdlib")

; === utilities ==
(define dispatch (dispatcher code) (do
    (var head (car code))
    (var args (cdr code))
    ((assoc head dispatcher) . args)))

; === compilation of expressions ==
(define emit args (println "\t" . args))
(define transl_return args (do
    (if args (transl_expr (car args)))
    (emit "leave")
    (emit "ret")
    ))

(var expr_dispatcher `(
    (return . @transl_return)
    ))

(define transl_expr (expr) (dispatch expr_dispatcher expr))

; === compilation of external declarations ===

(define transl_fun (name params body) (
    ))

(define transl_static_int args (do
    (print (car args) ": .long ")
    (if (nil? (cdr args))
        (println 0)
        (println (cadr args))
        )
    ))

(var extdecl_dispatcher `(
    (int . @transl_static_int)
    (int* . @transl_static_int)
    (fun . @transl_fun)
    ))

(define compile (prog)
    (while prog (do
        (dispatch extdecl_dispatcher (car prog))
        (set prog (cdr prog))
        )
    ))

; === program of virtual machine ===
(var vmcode `(
    (int stack_size 0)
    (int stack_top 0)
    (fun test () (
        (return)
        ))
))

(transl_expr `(return))
(compile vmcode)
