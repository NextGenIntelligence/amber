;
; rowl - generation 1
; Copyright (C) 2010 nineties
;
; $Id: vm.rlc 2010-06-02 15:02:56 nineties $
;

; === program of virtual machine ===
; system calls
(var SYS_EXIT    1)
(var SYS_FORK    2)
(var SYS_READ    3)
(var SYS_WRITE   4)
(var SYS_OPEN    5)
(var SYS_CLOSE   6)
(var SYS_WAITPID 7)
(var SYS_UNLINK  10)
(var SYS_EXECVE  11)
(var SYS_MUNMAP  91)
(var SYS_MMAP2   192)

(var STDIN_FD 0)
(var STDOUT_FD 1)
(var STDERR_FD 2)

(var PROT_READ  0x1)
(var PROT_WRITE 0x2)
(var PROT_EXEC  0x4)
(var PROT_SEM   0x8)
(var PROT_NONE  0x0)
(var MAP_SHARED     0x1)
(var MAP_PRIVATE    0x2)
(var MAP_TYPE       0xf)
(var MAP_FIXED      0x10)
(var MAP_ANONYMOUS  0x20)

(var BLOCK_SIZE (* 1024 1024)) ; 1MB
(var BLOCK_MASK (- BLOCK_SIZE 1))
(var MAX_BLOCKS 4096) ; 4096 is enough for 32-bit machine

(var vmcode `(

(fun strlen (str) (
    (int len 0)
    (while (!= (*8 str) '\0') (
        (incl str)
        (incl len)
        ))
    (return len)
    ))

(fun error (msg) (
    (syscall @SYS_WRITE @STDERR_FD msg (strlen msg))
    (vmexit 1)
    ))

(fun mmap2 (addr size) (
    (void* ptr (syscall @SYS_MMAP2 addr size
        @(| PROT_READ PROT_WRITE PROT_EXEC) @(| MAP_ANONYMOUS MAP_PRIVATE) -1 0))
    (if (&& (<= -128 ptr) (< ptr 0))  ((error "ERROR: mmap2 failed\n")))
    (return ptr)
    ))

(fun munmap (addr size) (
    (syscall @SYS_MUNMAP addr size)
    ))

(int   num_block 0)
(void* next_addr 0)
(void* free_first 0)
(void* free_last 0)

(fun alloc_block () (
    (void* ptr (mmap2 0 @(* 2 BLOCK_SIZE)))
    (void* slop (& ptr @BLOCK_MASK))
    (if (< (munmap ptr (- @BLOCK_SIZE slop)) 0) ((error "ERROR: munmap failed\n")))
    (if (&& (> slop 0) (< (munmap (- (+ ptr @BLOCK_SIZE) slop) slop) 0))
        ((error "ERROR: munmap failed\n")))
    (asgn ptr (- (+ ptr @BLOCK_SIZE) slop))
    (return ptr)
    ))


(fun alloc_block_fast () (
    (void* addr)
    (if (> (+ num_block 1) @MAX_BLOCKS) ((error "ERROR: too many blocks\n")))
    (if (== next_addr 0)
        ((asgn addr (alloc_block)))
        (
            (asgn addr (mmap2 @BLOCK_SIZE))
            (if (!= (& addr @BLOCK_MASK) 0) (
                    (if (< (munmap addr @BLOCK_SIZE) 0) ((error "ERROR: munmap failed\n")))
                    (asgn addr (alloc_block))
                ))
        ))
    (asgn next_addr (+ addr @BLOCK_SIZE))
    (asgn free_first addr)
    (asgn free_last  next_addr)
    ))

(fun vmexit (status) (
    (syscall @SYS_EXIT status)
    ))

(extern _start)
(fun _start () (
    (vmexit 0)
    ))

))
