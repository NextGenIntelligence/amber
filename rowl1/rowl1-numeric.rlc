;
; rowl - 1st generation
; Copyright (C) 2010 nineties
;
; $Id: rowl1-numeric.rlc 2011-11-07 19:17:29 nineties $
;

(import "rlvm-compile")
(import "rowl1-types")

(compile `object `(

(import "rowl1-node")
(import "rowl1-compile")

(fun int_uplus (x) (
    (return x)
    ))

(fun int_uminus (x) (
    (return (+ (- x) 2))
    ))

(fun int_times (x y) (
    (return (box (* (unbox x) (unbox y))))
    ))

(fun nonzero_check (x) (
    (if (== x 1) ; box(0) == 1
        (do
            (output_error stderr)
            (output_string stderr "division by zero\n")
            (exit 1)
        ))
    ))

(fun int_divide (x y) (
    (nonzero_check y)
    (return (box (/ (unbox x) (unbox y))))
    ))

(fun int_mod (x y) (
    (nonzero_check y)
    (return (box (% (unbox x) (unbox y))))
    ))

(fun int_plus (x y) (
    (return (- (+ x y) 1))
    ))

(fun int_minus (x y) (
    (return (+ (- x y) 1))
    ))

(fun int_lt (x y) ((if (< x y) (return true) (return false))))
(fun int_gt (x y) ((if (> x y) (return true) (return false))))
(fun int_le (x y) ((if (<= x y) (return true) (return false))))
(fun int_ge (x y) ((if (>= x y) (return true) (return false))))

(extern object exec_env)
(export fun setup_numeric (mod) (
    ; integer arithmetic
    (var IntT (headP Int))
    (add_builtin_function1 mod (to_sym "UnaryPlus") IntT int_uplus)
    (add_builtin_function1 mod (to_sym "UnaryMinus") IntT int_uminus)
    (add_builtin_function2 mod (to_sym "Times") IntT IntT int_times)
    (add_builtin_function2 mod (to_sym "Divide") IntT IntT int_divide)
    (add_builtin_function2 mod (to_sym "Mod") IntT IntT int_mod)
    (add_builtin_function2 mod (to_sym "Plus") IntT IntT int_plus)
    (add_builtin_function2 mod (to_sym "Minus") IntT IntT int_minus)
    (add_builtin_function2 mod (to_sym "LessThan") IntT IntT int_lt)
    (add_builtin_function2 mod (to_sym "GreaterThan") IntT IntT int_gt)
    (add_builtin_function2 mod (to_sym "LessEqual") IntT IntT int_le)
    (add_builtin_function2 mod (to_sym "GreaterEqual") IntT IntT int_ge)
    ))

    ))
