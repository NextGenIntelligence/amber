;
; rowl - 1st generation
; Copyright (C) 2012 nineties
;
; $Id: rowl1-array.rlc 2012-07-27 13:37:43 nineties $
;

(import "rlvm-compile")
(import "rowl1-types")

(compile `object `(

(import "rowl1-util")
(import "rowl1-node")
(import "rowl1-module")
(import "rowl1-compile")
(import "rowl1-assemble")
(import "rowl1-error")

(extern object current_loc)
(extern object current_mod)

(fun index_out_of_range () (
    (throw (out_of_range current_loc))
    ))

(fun ary_new (size) (
    (= size (unbox size))
    (if (< size 0) (throw (invalid_argument current_loc
        (string "size of array must be positive")
        (box size)
        )))
    (var ary (allocate_array size))
    (for i 0 size (do
        (array_set object ary i undefined)
        ))
    (return ary)
    ))

(fun ary_size (ary) (
    (return (box (array_size ary)))
    ))

(fun ary_at (ary i) (
    (= i (unbox i))
    (var size (array_size ary))
    (if (< i size) (return (array_get object ary i)))
    (index_out_of_range)
    ))

(fun ary_store (ary i v) (
    (= i (unbox i))
    (var size (array_size ary))
    (if (< i size) (do
        (array_set object ary i v)
        (return v)
        ))
    (index_out_of_range)
    ))

(export fun ary_to_list (ary) (
    (var ls 0)
    (var size (array_size ary))
    (rfor i size 0 (do
        (= ls (cons (array_get object ary i) ls))
        ))
    (return ls)
    ))

(export fun list_to_array (ls) (
    (var size (list_len ls))
    (var ary (allocate_array size))
    (for i 0 size (do
        (array_set object ary i (car ls))
        (= ls (cdr ls))
        ))
    (return ary)
    ))

(export fun setup_array (std) (
    (var ModArray (find_module no_loc std (to_sym "Array") @TRUE))
    (add_builtin_function1 ModArray (to_sym "new") intT ary_new 0)
    (add_builtin_function1 std (to_sym "size") arrayT ary_size 0)
    (add_builtin_function2 std (to_sym "at") arrayT intT ary_at 0)
    (add_builtin_function3 std (to_sym "store") arrayT intT DontCare ary_store 0)

    (add_builtin_function1 std (to_sym "to_list") arrayT ary_to_list 0)
    (add_builtin_function1 std (to_sym "to_array") listT list_to_array 0)
    ))

    ))
