;
; rowl - 1st generation
; Copyright (C) 2010 nineties
;
; $Id: rowl1-node.rlc 2014-04-20 21:38:45 nineties $
;

(import "rlvm-compile")
(import "rowl1-types")

(compile `object `(

(import "rowl1-util")
(import "rowl1-node")

(export fun exception (msg) (
    (return (make_node1 Exception msg))
    ))

(export fun exception1 (msg arg) (
    (return (make_node2 Exception msg arg))
    ))

(export fun exception2 (msg arg1 arg2) (
    (return (make_node3 Exception msg arg1 arg2))
    ))

(export fun logic_error (msg) (
    (return (make_node1 (to_sym "LogicError") msg))
    ))

(export fun logic_error1 (msg arg) (
    (return (make_node2 (to_sym "LogicError") msg arg))
    ))

(export fun invalid_argument0 (msg) (
    (return (make_node2 (to_sym "InvalidArgument") msg))
    ))

(export fun invalid_argument (msg val) (
    (return (make_node2 (to_sym "InvalidArgument") msg val))
    ))

(export fun value_error (msg val) (
    (return (make_node2 (to_sym "ValueError") msg val))
    ))

(export fun not_found (expr) (
    (return (make_node1 (to_sym "NotFound") expr))
    ))

(export fun type_error (required actual) (
    (return (make_node2 (to_sym "TypeError") required actual))
    ))

(export fun type_error2 (required sym actual) (
    (return (make_node3 (to_sym "TypeError") required sym actual))
    ))

(export fun out_of_range (obj idx) (
    (return (make_node2 (to_sym "IndexOutOfRange") obj idx))
    ))

(export fun out_of_domain (fun arg) (
    (return (make_node2 (to_sym "OutOfDomain") fun arg))
    ))

(export fun invalid_varname (val) (
    (return (make_node1 (to_sym "InvalidVariableName") val))
    ))


(export fun unexpected_error (msg val) (
    (return (make_node2 (to_sym "Unexpected") msg val))
    ))

(export fun matching_failed (domain args) (
    (return (make_node2 (to_sym "MatchingFailed") domain args))
    ))

(export fun undefined_var (sym) (
    (return (make_node1 (to_sym "UndefinedVariable") sym))
    ))

(export fun redefined_var (sym) (
    (return (make_node1 (to_sym "RedefinedVariable") sym))
    ))

(export fun undefined_keyword_argument (sym) (
    (return (make_node1 (to_sym "UndefinedKeywordArgument") sym))
    ))

(export fun undefined_slot (obj sym) (
    (return (make_node2 (to_sym "UndefinedSlot") obj sym))
    ))

(export fun redefined_slot (obj sym) (
    (return (make_node2 (to_sym "RedefinedSlot") obj sym))
    ))

(export fun undefined_fun (sym) (
    (return (make_node1 (to_sym "UndefinedFunction") sym))
    ))

(export fun unknown_expression (expr) (
    (return (make_node1 (to_sym "UnknownExpression") expr))
    ))

(export fun division_by_zero () (
    (return (make_node0 (to_sym "DivisionByZero") ))
    ))

(export fun access_error (msg obj sym) (
    (return (make_node3 (to_sym "AccessError") msg obj sym))
    ))

(export fun io_error (msg) (
    (return (make_node1 (to_sym "IOError") msg))
    ))

(export fun io_error1 (msg arg) (
    (return (make_node2 (to_sym "IOError") msg arg))
    ))

(export fun os_error (msg) (
    (return (make_node1 (to_sym "OSError") msg))
    ))

(export fun os_error1 (msg arg) (
    (return (make_node2 (to_sym "OSError") msg arg))
    ))

(export fun syntax_error (msg) (
    (return (make_node1 (to_sym "SyntaxError") msg))
    ))

(export fun bug (msg) (
    (return (make_node1 (to_sym "Bug") msg))
    ))

    ))
