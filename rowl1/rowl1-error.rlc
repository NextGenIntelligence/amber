;
; rowl - 1st generation
; Copyright (C) 2010 nineties
;
; $Id: rowl1-node.rlc 2012-12-15 00:29:19 nineties $
;

(import "rlvm-compile")
(import "rowl1-types")

(compile `object `(

(import "rowl1-util")
(import "rowl1-node")

(extern object current_loc)

(export fun exception (loc msg) (
    (return (make_node2 Exception loc msg))
    ))

(export fun type_error (loc required actual) (
    (return (make_node3 (to_sym "TypeError") loc
        (make_node1 (to_sym "expected") required)
        (make_node1 (to_sym "actual_value") actual)
        ))
    ))

(export fun out_of_range (loc obj idx) (
    (return (make_node3 (to_sym "IndexOutOfRange") loc
        (make_node1 (to_sym "object") obj)
        (make_node1 (to_sym "index") idx)
        ))
    ))

(export fun invalid_argument (loc msg val) (
    (return (make_node3 (to_sym "InvalidArg") loc msg val))
    ))

(export fun unexpected_error (loc msg val) (
    (return (make_node3 (to_sym "Unexpected") loc msg val))
    ))

(export fun matching_failed (obj args) (
    (return (make_node3 (to_sym "MatchingFailed") current_loc
        (make_node1 (to_sym "function") obj)
        (make_node (to_sym "arguments") args)))
    ))

(export fun unknown_field (loc head sym) (
    (return (make_node3 (to_sym "UnknownField")
        loc
        (make_node1 (to_sym "struct") head)
        (make_node1 (to_sym "field") sym)
        ))
    ))

(export fun undefined_var (loc sym) (
    (return (make_node2 (to_sym "UndefinedVariable") loc sym))
    ))

(export fun redefined_var (loc1 loc2 sym) (
    (return (make_node3 (to_sym "RedefinedVariable")
        (make_node1 (to_sym "new_def") loc1)
        (make_node1 (to_sym "prev_def") loc2)
        sym))
    ))

(export fun undefined_fun (loc sym) (
    (return (make_node2 (to_sym "UndefinedFunction") loc sym))
    ))

(export fun uninitialized_var (loc sym) (
    (return (make_node2 (to_sym "UninitializedVariable") loc sym))
    ))

(export fun unknown_expression (loc expr) (
    (return (make_node2 (to_sym "UnknownExpression") loc expr))
    ))

(export fun division_by_zero (loc) (
    (return (make_node1 (to_sym "DivisionByZero") loc))
    ))

(export fun invalid_format (loc str) (
    (return (make_node2 (to_sym "InvalidFormat") loc str))
    ))

(export fun not_found (loc expr) (
    (return (make_node2 (to_sym "NotFound") loc expr))
    ))

(export fun bug (msg) (
    (return (make_node1 (to_sym "Bug") msg))
    ))

    ))
