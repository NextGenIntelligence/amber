;
; rowl - 1st generation
; Copyright (C) 2010 nineties
;
; $Id: rowl1-io.rlc 2012-02-12 01:43:27 nineties $
;

(import "rlvm-compile")
(import "rowl1-types")

(compile `object `(

(import "rowl1-node")
(import "rowl1-module")
(import "rowl1-compile")

(fun make_ifstream (path in) (
    (return (variant @InputFileStreamE 2 path in))
    ))

(fun io_open_in (path) (
    (return (make_ifstream path (open_in path)))
    ))

(fun io_close_in (st) (
    (close_in (field_get st 2))
    ))

(fun make_ofstream (path out) (
    (return (variant @OutputFileStreamE 2 path out))
    ))

(fun io_open_out (path) (
    (return (make_ofstream path (open_out path)))
    ))

(fun io_close_out (st) (
    (close_out (field_get st 2))
    ))

(fun io_print (f s) (
    (pretty_print (field_get f 2) s)
    (return Nil)
    ))

(fun io_print_str (f s) (
    (output_string (field_get f 2) s)
    (return Nil)
    ))

(fun io_print_int (f n) (
    (output_int (field_get f 2) (unbox n))
    (return Nil)
    ))

(fun io_print_full (f flag obj) (
    (pretty_print_full (field_get f 2) obj)
    (return Nil)
    ))

; single character is represented as a string of one character
(fun io_read_char (io) (
    (var c)
    (if (< (input_char (address c) (field_get io 2)) 0)
        (return (to_sym "eof"))
        )
    (var s (allocate_string 1))
    (strncpy s (address c) 1)
    (return s)
    ))

(fun io_read_string (io) (
    (var s)
    (if (< (input_string (address s) (field_get io 2)) 0)
        (return (to_sym "eof"))
        )
    (return s)
    ))

(fun io_read_line (io) (
    (var s)
    (if (< (input_line (address s) (field_get io 2)) 0)
        (return (to_sym "eof"))
        )
    (return s)
    ))

(fun io_read_int (io) (
    (var n)
    (if (< (input_int (address n) (field_get io 2)) 0)
        (return (to_sym "eof"))
        )
    (return (box n))
    ))

(extern object exec_env)
(export fun setup_io (std) (
    (var io (make_module (to_sym "io") std))
    (add_module_variable io (to_sym "stdin") (make_ifstream (string "stdin") stdin))
    (add_module_variable io (to_sym "stdout") (make_ofstream (string "stdout") stdout))
    (add_module_variable io (to_sym "stderr") (make_ofstream (string "stderr") stderr))

    ; file IO
    (add_builtin_function1 io (to_sym "open_in") (domainP String) io_open_in 0)
    (add_builtin_function1 io (to_sym "open_out") (domainP String) io_open_out 0)
    (add_builtin_function1 io (to_sym "close") (domainP InputFileStream) io_close_in 0)
    (add_builtin_function1 io (to_sym "close") (domainP OutputFileStream) io_close_out 0)
    (add_builtin_function2 io (to_sym "print") (domainP OutputFileStream) DontCare io_print 0)
    (add_builtin_function2 io (to_sym "print") (domainP OutputFileStream) (domainP String) io_print_str 0)
    (add_builtin_function2 io (to_sym "print") (domainP OutputFileStream) (domainP Int) io_print_int 0)
    (add_builtin_function3 io (to_sym "print") (domainP OutputFileStream) (to_sym "fullform") DontCare
        io_print_full 0)
    (add_builtin_function1 io (to_sym "read_char") (domainP InputFileStream) io_read_char 0)
    (add_builtin_function1 io (to_sym "read_string") (domainP InputFileStream) io_read_string 0)
    (add_builtin_function1 io (to_sym "read_line") (domainP InputFileStream) io_read_line 0)
    (add_builtin_function1 io (to_sym "read_int") (domainP InputFileStream) io_read_int 0)
    ))

    ))
