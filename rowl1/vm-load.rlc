;
; rowl - 1st generation
; Copyright (C) 2010 nineties
;
; $Id: vm-load.rlc 2010-08-25 15:01:24 nineties $
;

(import "stdlib")
(import "config")
(import "vm-compile")

; load rowl executable program from file

; layout of executable program
; 4bytes : magic number
; 4bytes : # of global reference objects
; 4bytes : total size of global value objects (=N)
; Nbytes : global value objects
; 4bytes : length of byte codes (=M)
; Mbytes : byte code

; system calls
(var SYS_READ    3)
(var SYS_OPEN    5)
(var SYS_CLOSE   6)

; IO flags
(var O_RDONLY   0x0)
(var O_WRONLY   0x1)
(var O_RDWR     0x2)
(var O_CREAT    0x40)
(var O_TRUNC    0x100)
(var O_APPEND   0x200)

(var vm-load-code `(
(extern void* value_area_base)
(extern void* object_area_base)

(export read_program)
(fun read_program (path nrefp) (
    (int fd (open path))

    ; Do not change the order of three variables below
    (int magic)
    (int nref)
    (int vsize)

    (syscall @SYS_READ fd (address magic) 12)
    (if (!= magic @EXE_MAGIC) (
        (error "unknown file format\n")
        ))

    ([]= nrefp 0 nref)

    ; load global values and byte codes.
    ; XXX: this is temporal implementation. total size can exceed BLOCK_SIZE.
    (void* mem (alloc_block @BLOCK_SIZE))
    (syscall @SYS_READ fd mem vsize)

    (int len)
    (syscall @SYS_READ fd (address len) 4)
    (syscall @SYS_READ fd (+ mem vsize) len)
    (close fd)
    (= value_area_base mem)
    (+= mem vsize)
    (return mem)
    ))

(fun open (path) (
    (int fd (syscall @SYS_OPEN path @O_RDONLY))
    (if (< fd 0) ((error "open failed\n")))
    (return fd)
    ))

(fun close (fd) (
    (syscall @SYS_CLOSE fd)
    ))

    ))

(vtable_push)
(compile vm-load-code)
(vtable_pop)
