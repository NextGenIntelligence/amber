;
; rowl - 1st generation
; Copyright (C) 2010 nineties
;
; $Id: rowl1-object.rlc 2014-02-15 20:31:31 nineties $
;

(import "rlvm-compile")
(import "rowl1-types")

(compile `object `(

(import "rowl1-util")
(import "rowl1-node")
(import "rowl1-compile")
(import "rowl1-error")

(extern object current_loc)

(var slots (make_wrtable))
(var parent (to_sym "parent"))
(var parent_tbl (make_wrtable))
(var dummy (wrtable_add slots parent parent_tbl))
(var parent_special null)
(var noparent (to_unique_sym "noparent"))

(extern fun tuple_at)
(extern fun _copy)

(export fun remove_slot (obj sym) (
    (var tbl (wrtable_find slots sym))
    (if (!= tbl @C_UNDEF) (wrtable_del tbl obj))
    (return @C_NIL)
    ))

(export fun remove_parent (obj) (
    (wrtable_add parent_tbl obj noparent)
    ))

(export fun set_slot (obj sym val) (
    (var v (get_slot_nocheck_noalias obj sym))
    (if (== (node_type v) @AliasE) (do
        (var f (field_get v 2))
        (if f
            (return (runcode_with_self obj (get_bytecode f) val))
            ;(throw (logic_error2 current_loc
            ;    (string "Immutable Slot") obj sym))
            )
        ))
    (var tbl (wrtable_find slots sym))
    (if (== tbl @C_UNDEF) (do
        (= tbl (make_wrtable))
        (wrtable_add slots sym tbl)
        ))
    (wrtable_add tbl obj val)
    (return val)
    ))

(export fun set_slot_unalias (obj sym val) (
    (var tbl (wrtable_find slots sym))
    (if (== tbl @C_UNDEF) (do
        (= tbl (make_wrtable))
        (wrtable_add slots sym tbl)
        ))
    (wrtable_add tbl obj val)
    (return val)
    ))

(export fun set_slot_fusion (obj sym val) (
    (var f (get_slot_nocheck_noalias obj sym))
    (if (&& (is_function f) (is_function val))
        (return (set_slot obj sym (fusion_function val f)))
        )
    (return (set_slot obj sym val))
    ))

(export fun set_undef_slot (obj sym val) (
    (var v (get_slot_nocheck obj sym))
    (if (!= v @C_NIL) (return v))
    (return (set_slot obj sym val))
    ))

(export fun set_slot_overwrite (obj sym val) (
    (var v (get_slot_norec_ obj sym))
    (while (== v @C_UNDEF) (do
        (= obj (get_parent obj))
        (if (|| (== obj @C_NIL) (== obj @C_UNDEF))
            (return @C_UNDEF)
            )
        (= v (get_slot_norec_ obj sym))
        ))
    (return (set_slot obj sym val))
    ))

(fun get_parent (obj) (
    (var p (wrtable_find parent_tbl obj))
    (if (== p noparent) (return @C_UNDEF))
    (if (!= p @C_UNDEF) (return p))
    (= p (array_get object parent_special (node_type obj)))
    (if (!= p @C_UNDEF) (return p))
    (return @C_NIL)
    ))

(export fun get_slot_nocheck_noalias (obj sym) (
    (if (== sym parent) (return (get_parent obj)))
    (var tbl (wrtable_find slots sym))
    (if (== tbl @C_UNDEF) (return @C_UNDEF))
    (label retry)
    (var v (wrtable_find tbl obj))
    (if (&& (== v @C_UNDEF) (!= obj @C_NIL)) (do
        (= obj (get_parent obj))
        (if (== obj @C_UNDEF) (return @C_UNDEF))
        (goto retry)
        ))
    (return v)
    ))

(export fun get_slot_nocheck (obj sym) (
    (var v (get_slot_nocheck_noalias obj sym))
    (if (&& (== (node_type v) @AliasE) (field_get v 1))
        (return (runcode_with_self obj (get_bytecode (field_get v 1))))
    (if (== v @C_UNDEF)
        (return @C_NIL)
        (return v)
        ))
    ))

(export fun get_slot (obj sym) (
    (var v (get_slot_nocheck_noalias obj sym))
    (if (&& (== (node_type v) @AliasE) (field_get v 1))
        (return (runcode_with_self obj (get_bytecode (field_get v 1))))
        )
    (if (== v @C_UNDEF)
        (throw (undefined_var current_loc sym))
        )
    (return v)
    ))

(export fun get_slot_unalias (obj sym) (
    (var v (get_slot_nocheck_noalias obj sym))
    (if (== v @C_UNDEF)
        (throw (undefined_var current_loc sym))
        )
    (return v)
    ))

(fun get_slot_norec_ (obj sym) (
    (if (== sym parent) (return (get_parent obj)))
    (var tbl (wrtable_find slots sym))
    (if (== tbl @C_UNDEF) (return @C_UNDEF))
    (var v (wrtable_find tbl obj))
    (if (&& (== (node_type v) @AliasE) (field_get v 1))
        (return (runcode_with_self obj (get_bytecode (field_get v 1))))
        )
    (return v)
    ))

(export fun get_slot_norec (obj sym) (
    (var v (get_slot_norec_ obj sym))
    (if (== v @C_UNDEF) (return @C_NIL))
    (return v)
    ))

(export fun set_special_parent (ty obj) (
    (array_set object parent_special ty obj)
    (return obj)
    ))

(export fun has_slot_p (obj sym) (
    (if (!= (get_slot_norec_ obj sym) @C_UNDEF)
        (return @C_TRUE)
        (return @C_FALSE)
        )
    ))

(fun alias_r (reader) (
    (return (variant @AliasE 2 reader 0))
    ))

(fun alias_rw (reader writer) (
    (return (variant @AliasE 2 reader writer))
    ))

(export fun setup_object_pre () (
    (= parent_special (allocate_array @NUM_NODE_TYPE))
    (for i 0 @NUM_NODE_TYPE
        (array_set object parent_special i @C_NIL)
        )
    ))

(fun set_parents (h parent) (
    (if (== h Symbol) (return (set_special_parent @SymbolE parent))
    (if (== h List) (return (set_special_parent @ListE parent))
    (if (== h Array) (return (set_special_parent @ArrayE parent))
    (if (== h Table) (return (set_special_parent @TableE parent))
    (if (== h Assembler) (return (set_special_parent @AssemblerE parent))
    (if (== h Bytecode) (return (set_special_parent @BytecodeE parent))
    (if (== h Function) (return (set_special_parent @FunctionE parent))
    (if (== h Function) (return (set_special_parent @BuiltinFunctionE parent))
    (if (== h Function) (return (set_special_parent @BoundFunctionE parent))
    (if (== h Function) (return (set_special_parent @ContinuationE parent))
    (if (== h Alias) (return (set_special_parent @AliasE parent))
    (if (== h InputFileStream) (return (set_special_parent @InputFileStreamE parent))
    (if (== h OutputFileStream) (return (set_special_parent @OutputFileStreamE parent))
    (if (== h InputStringStream) (return (set_special_parent @InputStringStreamE parent))
    (if (== h OutputStringStream) (return (set_special_parent @OutputStringStreamE parent))
    (if (== h Parser) (return (set_special_parent @ParserE parent))
    (if (== h BigInt) (return (set_special_parent @BigIntE parent))
    (if (== h Loc) (return (set_special_parent @LocE parent))
    (if (== h Tuple) (return (set_special_parent @TupleE parent))
    (if (== h Int) (return (set_special_parent @IntE parent))
    (if (== h String) (return (set_special_parent @StringE parent))
    (if (== h Float) (return (set_special_parent @FloatE parent))
        ))))))))))))))))))))))
    (throw (exception1 current_loc (string "Not builtin type") h))
    ))

(export fun setup_object (mod) (
    (add_function3 mod (to_sym "set_slot") DontCare symT DontCare set_slot 0)
    (add_function3 mod (to_sym "set_slot_fusion") DontCare symT DontCare set_slot_fusion 0)
    (add_function3 mod (to_sym "set_slot_unalias") DontCare symT DontCare set_slot_unalias 0)
    (add_function2 mod (to_sym "get_slot") DontCare symT get_slot 0)
    (add_function2 mod (to_sym "get_slot_norec") DontCare symT get_slot_norec 0)
    (add_function2 mod (to_sym "get_slot_unalias") DontCare symT  get_slot_unalias 0)
    (add_function2 mod (to_sym "has_slot?") DontCare symT has_slot_p 0)

    (add_function1 mod (to_sym "alias") funT alias_r 0)
    (add_function2 mod (to_sym "alias") funT funT alias_rw 0)

    (add_function2 mod (to_sym "set_parents") symT DontCare set_parents 0)
    ))

    ))
