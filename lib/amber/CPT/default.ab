# Copyright (C) 2014 nineties
# $Id: amber/CPT/default.ab 2014-04-25 14:23:45 nineties $

import algebra::linalg (*)
import random (rand)

#= Conditional probability table =
# Prior conditional probability tables for builtin objects and functions.
# i-th entry of tables correspond to BASIC_TYPES[i].

BASIC_TYPES := 'Array{Nil, Bool, Undef, Symbol, Int, String, Float, Range,
    Tuple, List, Array, Table, Function, Module, Class, Trait,
    InputFileStream, OutputFileStream, _others_}

mustbe(ty) := {
    i := BASIC_TYPES.index(ty)
    i  = BASIC_TYPES.size-1 unless i
    p := zeros(BASIC_TYPES.size)
    p[i] = 1
    p
}

# Non-informative prior probabilities for global variables and local
# variables.
NON_INFORMATIVE_GLOBAL := vector(0.010277417, 0.000996909, 9.96909e-5, 0.000996909, 0.082219337, 0.012846771, 0.020554834, 0.000996909, 0.030832251, 0.025693543, 0.005138709, 0.002569354, 0.416235392, 0.051387085, 0.24665801, 0.05395644, 0.005138709, 0.010277417, 0.023124312)

NON_INFORMATIVE_LOCAL := vector(0.03909369,0.017382965,0.003596476,0.006515615,0.470538889,0.128873708,0.065156149,0.016783553,0.054546546,0.065156149,0.047953008,0.04615477,0.006593539,0.001798238,0.000599413,0.001198825,0.000998004,0.000998004,0.02606246)

add(_, _)           := NON_INFORMATIVE_LOCAL
add('Int, 'Int)     := mustbe('Int)
add('Int, 'Float)   := mustbe('Float)
add('Float, 'Int)   := mustbe('Float)
add('Float, 'Float) := mustbe('Float)
