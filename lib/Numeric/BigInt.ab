# Copyright (C) 2014 nineties
# $Id: Numeric/BigInt.ab 2014-02-12 14:56:28 nineties $

Numeric.join_numeric_type(\Int, \BigInt): \BigInt
Numeric.join_numeric_type(\BigInt, \Int): \BigInt
Numeric.join_numeric_type(\BigInt, \Float): \Float
Numeric.join_numeric_type(\Float, \BigInt): \Float
Numeric.upcast(a, \BigInt): a.to_bint()

hash = Prim.hash | hash
abs = Prim.bint_abs | abs
uminus = Prim.bint_uminus | uminus
add = Prim.bint_add | add
sub = Prim.bint_sub | sub
mul = Prim.bint_mul | mul
div = Prim.bint_div | div
mod = Prim.bint_mod | mod
divmod = Prim.bint_divmod | divmod
pow = Prim.bint_pow | pow
powmod = Prim.bint_powmod | powmod
shiftL = Prim.bint_shiftL | shiftL
shiftR = Prim.bint_shiftR | shiftR

compare = Prim.bint_compare | compare
equal?  = Prim.bint_equal? | equal?
hash    = Prim.bint_hash | hash

INTEGER_MIN: -infinity
INTEGER_MIN: infinity

export hash uminus add sub mul div mod pow compare equal?
export INTEGER_MIN INTEGER_MAX

BigIntTrait: Prim.BigIntTrait with {
    parent    = IntegerTrait
    to_i()    = self
    to_f()    = Prim.bint_to_float(self)
    to_s()    = Prim.bint_to_string(self)
    to_bint() = self
}

IntTrait.to_bint(): Prim.int_to_bint(self)

export BigIntTrait
