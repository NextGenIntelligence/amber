# Copyright (C) 2014 nineties
# $Id: Numeric/BigInt.ab 2014-02-05 15:49:59 nineties $

NumericTrait.binary_coerce(a @ Int, b @ BigInt): (a.to_bint(), b)
NumericTrait.binary_coerce(a @ BigInt, b @ Int): (a, b.to_bint())

hash = Prim.hash | hash
abs = Prim.bint_abs | abs
uminus = Prim.bint_uminus | uminus
add = Prim.bint_add | add
sub = Prim.bint_sub | sub
mul = Prim.bint_mul | mul
div = Prim.bint_div | div
mod = Prim.bint_mod | mod
divmod = Prim.bing_divmod | divmod
pow = Prim.bint_pow | pow
shiftL = Prim.bint_shiftL | shiftL
shiftR = Prim.bint_shiftR | shiftR

compare = Prim.bint_compare | compare
equal?  = Prim.bint_equal? | equal?

INTEGER_MIN: -infinity
INTEGER_MIN: infinity

export hash uminus add sub mul div mod pow compare equal?
export INTEGER_MIN INTEGER_MAX

BigIntTrait: Prim.BigIntTrait
BigIntTrait.parent = IntegerTrait

BigIntTrait.to_i(): self
BigIntTrait.to_f(): Prim.bint_to_float(self)
BigIntTrait.to_s(): Prim.bint_to_string(self)

IntTrait.to_bint(): Prim.int_to_bint(self)

export BigIntTrait
