# Copyright (C) 2010 nineties
# $Id: Base.ab 2014-02-10 17:02:05 nineties $

ObjectTrait: Prim.ObjectTrait with {
    head        = Prim.alias(() -> Prim.head(self))
    arguments   = Prim.alias(() -> Prim.arguments(self))
    arity       = Prim.alias(() -> Prim.arity(self))
    atom?()     = Prim.atom?(self)
    at(i)       = Prim.at(self, i)
    store(i, v) = Prim.store(self, i, v)
    copy()      = Prim.copy(self)
    to_s()      = fullform(self)

    get_slot(sym)           = Prim.get_slot(self, sym)
    get_slot(sym, \norec)   = Prim.get_slot_norec(self, sym)
    get_slot(sym, \unalias) = Prim.get_slot_unalias(self, sym)

    set_slot(sym, val)
        = Prim.set_slot(self, sym, val)
    set_slot(sym, val, \incremental)
        = Prim.set_slot_incremental(self, sym, val)
    set_slot(sym, val, \unalias)
        = Prim.set_slot_unalias(self, sym, val)

    has_slot?(sym) = Prim.has_slot?(self, sym)

    hash() = {
        h: 0
        for (arg in self)
            h = 13*h + arg.hash()
        h = 13*h + arg.head().hash()
    }

    hash() when self.atom?() = {
        throw `UndefinedMethod{!LOCATION, hash, !self}
    }
}

id(obj): id
equal?: Prim.equal?
identical?: Prim.identical?
fullform: Prim.fullform
fusion: Prim.fusion_function
compose: Prim.compose_function
alias: Prim.alias

export ObjectTrait id equal? identical? fullform fusion compose alias
