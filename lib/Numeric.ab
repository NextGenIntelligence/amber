# Copyright (C) 2014 nineties
# $Id: Numeric.ab 2014-02-25 10:26:23 nineties $

typejoin('Int, 'Float): 'Float
join_numeric_type('Int, 'Float): 'Float
join_numeric_type('Float, 'Int): 'Float

upcast(a, h) when a.head == h: a
upcast(a, 'Float): a.to_f()

divmod(a, b): (div(a, b), mod(a, b))
powmod(a, b, c): perform_ternary_operation(a, b, powmod, 'powmod)

less_than?     = Prim.int_less_than? | less_than?
greater_than?  = Prim.int_greater_than? | greater_than?
less_equal?    = Prim.int_less_equal? | less_equal?
greater_equal? = Prim.int_greater_equal? | greater_equal?

abs(a): a >= 0 ? a : -a
uminus(a): -1 * a

# Integer and Floating-point
INTEGER_MIN: Prim.INTEGER_MIN
INTEGER_MAX: Prim.INTEGER_MAX

uplus: Prim.int_uplus | Prim.float_uplus
uminus = Prim.int_uminus | Prim.float_uminus | uminus
abs    = Prim.int_abs | Prim.float_abs | abs
add    = Prim.int_add | Prim.float_add | add
sub    = Prim.int_sub | Prim.float_sub | sub
mul    = Prim.int_mul | Prim.float_mul | mul
quo    = Prim.float_quo | quo
div    = Prim.int_div | div
mod    = Prim.int_mod | mod
pow    = Prim.int_pow | Prim.float_pow | pow
powmod = Prim.int_powmod | powmod
shiftL: Prim.int_shiftL
shiftR: Prim.int_shiftR

compare = Prim.int_compare | Prim.float_compare | compare
equal?  = Prim.float_equal? | equal?
hash    = Prim.int_hash | Prim.float_hash | hash

min(a, b): a < b ? a : b
max(a, b): a < b ? b : a
minmax(a, b): a < b ? (a, b) : (b, a)

infinity: Prim.infinity

# traits

trait Int {
    .to_i(): self
    .to_f(): Prim.int_to_float(self)
    .to_s(): Prim.int_to_string(self)
}

trait Float {
    .to_i(): Prim.float_to_int(self)
    .to_f(): self
    .to_s(): Prim.float_to_string(self)
}

Prim.set_builtin_parent('Int, Trait.Int)
Prim.set_builtin_parent('Float, Trait.Float)
