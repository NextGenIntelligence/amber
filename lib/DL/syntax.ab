# Copyright (C) 2014 nineties
# $Id: DL/syntax.ab 2014-07-20 20:17:00 nineties $

#= Abstract syntax tree of SHOQ(D) Ontology Description Logic =

# Copy Amber's builtin parsers
.import_vars(amber::syntax, 'spaces, 'identifier, 'decimal)

reserved_words := Array{"forall", "exists", "trans", "role_box"}

# Concepts
concept_name ::= identifier
role_name    ::= identifier
nominal      ::= "{" identifier "}" { `Nominal{!$1} }

primary_concept ::= concept_name
                  | nominal
                  | "(" concept ")" { $1 }
negation_concept ::= "!" negation_concept { `Not{!$1} }
                   | primary_concept

intersection_conccept ::= intersection_conccept "&" negation_concept
                          { `And{!$0, !$2} }
                        | negation_concept

union_concept ::= union_concept "|" intersection_conccept
                  { `Or{!$0, !$2} }
                | intersection_conccept

quantified_concept ::= 'forall role_name "." concept
                       { `Forall{!$1, !$3} }
                     | 'exists role_name "." concept
                       { `Exists{!$1, !$3} }
                     | ">=" decimal role_name "." concept
                       { `AtLeast{!$1, !$2, !$4} }
                     | "<=" decimal role_name "." concept
                       { `AtMost{!$1, !$2, !$4} }
                     | union_concept

concept ::= quantified_concept

# Role box
role_axiom ::= role_name "<=" role_name { `Included{!$0, !$2} }
             | 'trans role_name         { `Trans{!$1} }

role_box ::= 'role_box "{" aligned(role_axiom) "}"
             { `RoleBox{!$2} }

##== TBox statement ==
#concept_equality   ::= concept "=" concept  { `Equal{!$0, !$2} }
#concept_inclusion  ::= concept "<=" concept { `Include{!$2, !$0} }
#                     | concept ">=" concept { `Include{!$0, !$2} }
#concept_definition ::= concept_name ":=" concept { `Define{!$0, !$2} }
#primitive_concept_definition
#    ::= concept_name ":<=" concept { `PrimDefine{!$0, !$2} }
#
#tbox_statement ::= concept_equality
#                 | concept_inclusion
#                 | concept_definition
#                 | primitive_concept_definition
#
#tbox_definition
#    ::= <<multiline>> 'TBox concept_name "{" aligned(tbox_statement) "}"
#        { `DeineTBox{!$1, !$3} }
#
##== ABox statement ==
#abox_definition
#    ::= <<multiline>> 'ABox concept_name "{" aligned(concept) "}"
#        { `DefineABox{!$1, !$3} }
