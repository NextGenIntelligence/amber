# Copyright (C) 2014 nineties
# $Id: DL/syntax.ab 2014-07-21 09:04:06 nineties $

#= Abstract syntax tree of SHOQ(D) Ontology Description Logic =

# Copy Amber's builtin parsers
.import_vars(amber::syntax, 'spaces, 'identifier, 'decimal)

reserved_words := Array{"forall", "exists", "transitivie",
    "ABox", "TBox", "knowledge"}

# Concepts
concept_name ::= identifier
role_name    ::= identifier
nominal      ::= "{" identifier "}" { `Nominal{!$1} }

primary_concept ::= concept_name
                  | nominal
                  | "(" concept ")" { $1 }
negation_concept ::= "!" negation_concept { `Not{!$1} }
                   | primary_concept

intersection_conccept ::= intersection_conccept "&" negation_concept
                          { `And{!$0, !$2} }
                        | negation_concept

union_concept ::= union_concept "|" intersection_conccept
                  { `Or{!$0, !$2} }
                | intersection_conccept

quantified_concept ::= 'forall role_name "." concept
                       { `Forall{!$1, !$3} }
                     | 'exists role_name "." concept
                       { `Exists{!$1, !$3} }
                     | ">=" decimal role_name "." concept
                       { `AtLeast{!$1, !$2, !$4} }
                     | "<=" decimal role_name "." concept
                       { `AtMost{!$1, !$2, !$4} }
                     | union_concept

concept ::= quantified_concept

# Knowledge base
individual_name ::= individual_name "::" identifier
                    { `Var{!$0, !$2} }
                  | identifier

instance_declaration
    ::= individual_name ":" concept
        { `InstanceDecl{!$0, !$2} }
      | individual_name role_name individual_name
        { `RoleInstanceDecl{!$1, !$0, !$2} }

# ABox (Assertion component)
abox_declaration
    ::= <<multiline>> 'ABox "{" aligned(instance_declaration) "}"
        { `ABoxDecl{!$2} }


role_axiom ::= role_name "<=" role_name { `Included{!$0, !$2} }
             | 'transitivie role_name   { `Trans{!$1} }

# TBox (Terminological component)
tbox_declaration
    ::= <<multiline>> 'TBox "{" aligned(role_axiom) "}"
        { `TBoxDecl{!$2} }

default ::= (abox_declaration/tbox_declaration)* { `KBDecl{!$0} }
