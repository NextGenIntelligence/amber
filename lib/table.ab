# Copyright (C) 2010 nineties
# $Id: table.ab 2014-04-09 01:20:02 nineties $

#= Table =
# Hashtable. The function `hash` is used for hashing keys and `equal?`
# is used for equality check of keys.

Table: object_system.builtin_class('Table) with {
    # Create an empty table.
    .new(): prim.table_new()

    # Create a table from a sequence of pairs.
    .new(sequence) when sequence.Iterable? :
        prim.iterable_to_table(sequence.each())

    # The number of entries.
    .size: alias(() -> prim.table_size(self))

    # List of keys.
    .keys: alias(() -> prim.table_keys(self))

    # List of values.
    .values: alias(() -> prim.table_values(self))

    # List of key-value pairs.
    .pairs: alias(() -> prim.table_pairs(self))

    # Lookup `self` with `key`. If the talbe has no entry for the key,
    # return `nil`.
    .get(key): prim.table_at(self, key)

    # Store `value` with `key`.
    .set(key, value): prim.table_store(self, key, value)
}

prim.set_builtin_parent('Table, Table)
