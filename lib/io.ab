# Copyright (C) 2010 nineties
#
# $Id: io.ab 2012-06-29 16:43:15 nineties $

module std::io {
    ### Basic IO functions
    print(obj): print(stdout, obj)
    print(\fullform, obj): print(stdout, \fullform, obj)

    read_char():   read_char(stdin)
    read_string(): read_string(stdin)
    read_line():   read_line(stdin)
    read_int():    read_int(stdin)

    puts(io@OutputFileStream, obj): {
        print(io, obj)
        print(io, "\n")
    }
    puts(io@OutputFileStream, \fullform, obj): {
        print(io, \fullform, obj)
        print(io, "\n")
    }
    puts(obj): puts(stdout, obj)
    puts(\fullform, obj): puts(stdout, \fullform, obj)

    ### printf
    #format_element
    #    ::= "%s"        { \String}
    #      | "%d"        { \Int}
    #      | "%p"        { \PrettyPrint }

    #format_string
    #    ::= [space_sensitive] '"' many(format_element) '"'
    #        { node1 }

    #postfix_expr
    #    ::= "printf" "(" format_string "," delimited1(expr, ",") ")"
    #        { `Printf{!node2, !node4} }
    #module impl {
    #    printf_compile(fmt@String, args@List): {
    #        `puts([!fmt, !args])
    #    }
    #}

    #(\printf)(...) => throw `InvalidUsage{!LOCATION, 
    #        "the 1st argument of `printf' must be a string literal"}

    #(\printf)(fmt@String, args@...) => impl::printf_compile(fmt, args)

}
