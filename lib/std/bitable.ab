# Copyright (C) 2012 nineties
#
# $Id: table.ab 2013-07-31 19:48:12 nineties $

module Std {
    module BiTable {
        new(): `BiTable {!Table::new(), !Table::new()}

        new(hash, equal):
            `BiTable {
                !Table::new(hash, equal),
                !Table::new(hash, equal)
            }

        new(hash, equal, kill):
            `BiTable {
                !Table::new(hash, equal, kill),
                !Table::new(hash, equal, kill)
            }

        new(hash1, equal1, hash2, equal2, kill1, kill2):
            `BiTable {
                !Table::new(hash1, equal1, kill1),
                !Table::new(hash2, equal2, kill2)
            }

        to_bitable(pairs@List): {
            tbl: BiTable::new()
            for ((a,b) in pairs) {
                tbl[0][a] = b
                tbl[1][b] = a
            }
            tbl
        }
    }

    enter(BiTable{tbl1, tbl2}): {
        tbl1.enter
        tbl2.enter
    }

    exit(BiTable{tbl1, tbl2}): {
        tbl1.exit
        tbl2.exit
    }

    left(BiTable{tbl, _}): tbl
    right(BiTable{_, tbl}): tbl

}

module Amber {
    bitable_entry ::= expr "<=>" expr { ($0, $2) }
    postfix_expr
        ::= <<multiline>> "BiTable" "{" delimited(bitable_entry, ",") "}"
            { `to_bitable(!$2) }
}
