# Copyright (C) 2014 nineties
# $Id: String.ab 2014-02-11 00:09:01 nineties $

Numeric.join_numeric_type(a, b @ String): \String
Numeric.join_numeric_type(a @ String, b): \String
upcast(a, \String): a.to_s()

add = Prim.string_add | add
equal? = Prim.string_equal? | equal?

StringTrait: Prim.StringTrait with {
    length      = alias(() -> Prim.string_length(self))
    size        = alias(() -> Prim.string_length(self))
    hash()      = Prim.string_hash(self)
    to_s()      = self
    at(i)       = Prim.string_at(self, i)
    contain?(s) = Prim.string_contain?(self, s)
    unescape()  = Prim.unescape(self)
    split(sep)  = Prim.split(self, sep)
    to_code()   = Prim.char_to_code(self)
    each() = {
        str: self
        i: 0
        () -> {
            if (i < str.size) {
                i += 1
                return str[i-1]
            }
            return undef
        }
    }
}

IntTrait.to_char():      Prim.code_to_char(self)

export add equal? StringTrait
