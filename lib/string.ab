# Copyright (C) 2010 nineties
#
# $Id: io.ab 2012-07-21 12:11:44 nineties $
module std::string {
    ### Format string

    format_string_element
        ::= "%s"    { \String }
          | "%d"    { \Decimal }
          | "%x"    { \Hexadecimal }
          | "%o"    { \Octal }
          | "%b"    { \Binary }
          | "%" .   { throw `SyntaxError{!LOCATION,
                        "Invalid format string", !($0 + $1)}
                    }
          | [space_sensitive]
            [^%\""]+ { $input.unescape }

    format_string
        ::= [space_sensitive]
            '"' format_string_element* '"' { $1 }

    module impl {
        printf_compile(fmt, args): {
            loop: 
                ([], [], ls)
                    -> ls.reverse
              | ([f@String, fs@...], args, ls)
                    -> loop(fs, args, cons(`print(!f), ls))
              | ([\String, fs@...], [s@String, ss@...], ls)
                    -> loop(fs, ss, cons(`print(!s), ls))

            print(loop(fmt, args, []))
        }
    }
    postfix_expr
        ::= "printf" "(" format_string ("," expr)* ")" 
            { impl::printf_compile($2, map(x -> x[1], $3)) }
}
