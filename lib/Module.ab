# Copyright (C) 2010 nineties
# $Id: Module.ab 2014-01-31 19:10:30 nineties $

Module: enter_module(\Module)

    # import mod.var to global module.
    import_variable(mod @ Module, var @ Symbol):
        Prim.define_variable(var, Prim.get_slot(mod, var), \incremental)

    import_variables(mod @ Module, vars @ List):
        Prim.list_map(v -> import_variable(mod, v), vars)

exit_module()

macro(Import{symbols}): {
    script:
        Prim.string_add(
        Prim.string_join(
            Prim.list_map(Prim.symbol_to_string, symbols), "/")
        , ".ab")

    mod: Prim.list_foldl1((l, r) -> `Slot{!l, !r}, symbols)

    expand_import:
        [M] -> `Seq{[
            ((!M):enter_module(\!M)),
            If{(!M).exports == undef, ((!M).exports=[])},
            load(!script),
            exit_module()
        ]}
        | [M,rest...] -> `Seq{[
            ((!M):enter_module(\!M)),
            If{(!M).exports == undef, ((!M).exports=[])},
            !expand_import(rest),
            exit_module()
        ]}

    `Seq{[
        !expand_import(symbols),
        Module.import_variables(!mod, (!mod).exports)
    ]}
}

macro(Export{vars}): {
    `(exports = Prim.list_foldr(Prim.list_insert_unique, \!vars, exports))
}
