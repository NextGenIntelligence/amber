# Copyright (C) 2014 nineties
# $Id: IO/StringStream.ab 2014-03-09 21:44:40 nineties $

#= String stream =

# Create an input string stream from `text`.
new_in(text @ String, binary=false): Prim.iss_new(text, binary)

# Create an output string stream.
new_out(binary=false): Prim.oss_new(binary)

trait InputStringStream {
    extend 'InputStream

    # True when the stream is at end of stream.
    .eos?: alias(() -> Prim.iss_eos?(self))

    # Read one byte from the stream.
    .read(eoserror=false): Prim.iss_read_char(self, eoserror)

    # Read `n` bytes or until reach EOS and return them as a string.
    .read(n @ Int, eoserror=false): Prim.read_bytes(self, n, eoserror)

    # Return the next character if any.
    .lookahead(eoserror=false): Prim.iss_lookahead(self, eoserror)
}

trait OutputStringStream {
    extend 'OutputStream

    # Output string `s` to the stream.
    .write(s @ String): Prim.oss_print_string(self, s)

    # Convert the stream to a string.
    .to_s(): Prim.oss_to_string(self)
}

Prim.set_builtin_parent('InputStringStream, Trait.InputStringStream)
Prim.set_builtin_parent('OutputStringStream, Trait.OutputStringStream)
